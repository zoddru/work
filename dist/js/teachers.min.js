/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _VuePayModel = __webpack_require__(1);

var _VuePayModel2 = _interopRequireDefault(_VuePayModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var payPoints = [{ name: 'M1', money: 22467, staff: 1 }, { name: 'M2', money: 72729, staff: 3 }, { name: 'M3', money: 183344, staff: 7 }, { name: 'M4', money: 28207, staff: 1 }, { name: 'M5', money: 30430, staff: 1 }, { name: 'M6a', money: 32835, staff: 1 }, { name: 'M6b', money: 33160, staff: 1 }];

Vue.filter('pounds', function (value) {
    if (typeof value !== 'number') return value;
    if (window.Intl === undefined) return '£' + parseInt(value);
    return '£' + Intl.NumberFormat().format(parseInt(value));
});

var model = new _VuePayModel2.default('#payModel', payPoints);

var app = new Vue(model);

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _PayModel = __webpack_require__(2);

var _PayModel2 = _interopRequireDefault(_PayModel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var VuePayModel = function VuePayModel(el, payPoints) {
    _classCallCheck(this, VuePayModel);

    this.el = el;

    var payModel = _PayModel2.default.create(payPoints, 1);
    this.data = { payModel: payModel };

    var model = this;
    this.computed = {
        increase: {
            get: function get() {
                return this.payModel.increase;
            },
            set: function set(value) {
                this.payModel = this.payModel.change({ increase: parseFloat(value) });
            }
        },

        payPoints: {
            get: function get() {
                return this.payModel.payPoints;
            }
        },

        total: {
            get: function get() {
                return this.payModel.total;
            }
        },

        nextTotal: {
            get: function get() {
                return this.payModel.nextTotal;
            }
        },

        difference: {
            get: function get() {
                return this.payModel.difference;
            }
        }
    };

    this.methods = {
        changeStaff: function changeStaff(payPoint, staff) {
            this.payModel = this.payModel.changeStaff(payPoint, parseInt(staff));
        }
    };
};

exports.default = VuePayModel;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _PayPoint = __webpack_require__(3);

var _PayPoint2 = _interopRequireDefault(_PayPoint);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var sumTotals = function sumTotals(total, pp) {
    return total + pp.total;
};
var sumNextTotals = function sumNextTotals(total, pp) {
    return total + pp.nextTotal;
};

var PayModel = function () {
    function PayModel() {
        var payPoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var increase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

        _classCallCheck(this, PayModel);

        this.message = 'pay model object';

        this.payPoints = payPoints;
        this.increase = increase;

        Object.freeze(this.payPoints);
        Object.freeze(this);
    }

    _createClass(PayModel, [{
        key: 'change',
        value: function change(newValues) {
            var props = Object.assign({}, this, newValues);
            return PayModel.create(props.payPoints, props.increase);
        }
    }, {
        key: 'changeStaff',
        value: function changeStaff(payPoint, staff) {
            var newValues = { staff: staff };
            var payPoints = this.payPoints.map(function (pp) {
                return pp !== payPoint ? pp : pp.change(newValues);
            });
            return PayModel.create(payPoints, this.increase);
        }
    }, {
        key: 'createMultable',
        value: function createMultable() {
            var payModel = this;
            var proto = Object.getPrototypeOf(payModel);
            var props = Object.getOwnPropertyNames(payModel).concat(Object.getOwnPropertyNames(proto)).filter(function (n) {
                return n !== 'constructor' && n !== 'increase';
            });
            var proxy = { _original: payModel };

            props.forEach(function (name) {
                Object.defineProperty(proxy, name, {
                    get: function get() {
                        return payModel[name];
                    }
                });
            });

            Object.defineProperty(proxy, 'increase', {
                get: function get() {
                    return this._original.increase;
                },
                set: function set(value) {
                    this._original = payModel.change({ increase: value });
                }
            });

            return proxy;
        }
    }, {
        key: 'total',
        get: function get() {
            return this.payPoints.reduce(sumTotals, 0);
        }
    }, {
        key: 'nextTotal',
        get: function get() {
            return this.payPoints.reduce(sumNextTotals, 0);
        }
    }, {
        key: 'difference',
        get: function get() {
            return this.nextTotal - this.total;
        }
    }], [{
        key: 'create',
        value: function create(payPoints, increase) {
            payPoints = payPoints.map(function (pp) {
                return Object.assign({}, pp, { increase: increase });
            }).map(function (pp) {
                return new _PayPoint2.default(pp);
            });

            return new PayModel(payPoints, increase);
        }
    }]);

    return PayModel;
}();

exports.default = PayModel;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PayPoint = function () {
    function PayPoint() {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref$name = _ref.name,
            name = _ref$name === undefined ? '' : _ref$name,
            _ref$money = _ref.money,
            money = _ref$money === undefined ? 0 : _ref$money,
            _ref$staff = _ref.staff,
            staff = _ref$staff === undefined ? 0 : _ref$staff,
            _ref$increase = _ref.increase,
            increase = _ref$increase === undefined ? 1 : _ref$increase;

        _classCallCheck(this, PayPoint);

        var props = { name: name, money: money, staff: staff, increase: increase };

        Object.assign(this, props);
        Object.freeze(this);
    }

    _createClass(PayPoint, [{
        key: 'change',
        value: function change(newValues) {
            var props = Object.assign({}, this, newValues);
            return new PayPoint(props);
        }
    }, {
        key: 'total',
        get: function get() {
            return this.money * this.staff;
        }
    }, {
        key: 'nextMoney',
        get: function get() {
            return this.money * this.increase;
        }
    }, {
        key: 'nextTotal',
        get: function get() {
            return this.nextMoney * this.staff;
        }
    }]);

    return PayPoint;
}();

exports.default = PayPoint;

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,